{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACxB,OACG,sBAAKC,UAAU,mDAAf,UACG,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACG,6BAAKF,IACL,4BAAIC,WCcDK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd,OACG,8BAEMA,EAAOC,KAAI,SAACC,EAAKC,GACd,OACG,cAAC,EAAD,CAEGR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKdC,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACG,qBAAKV,UAAU,MAAf,SACG,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCJI,EARA,SAACC,GACb,OACG,qBAAKC,MAAO,CAACC,UAAY,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACIJ,EAAMK,YCkBDC,E,kDApBZ,WAAYN,GAAO,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACVC,UAAU,GAHE,E,8DAOAC,EAAOC,GACtBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAK1B,OAAIG,KAAKJ,MAAMC,SACL,2DAEHG,KAAKX,MAAMK,a,GAjBGQ,aC6CZC,G,wDAtCZ,aAAe,IAAD,8BACX,gBAaNC,eAAiB,SAACC,GACf,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAbvC,EAAKZ,MAAQ,CACVlB,OAAQ,GACR4B,YAAa,IAJL,E,gEAQG,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEvB,OAAQmC,S,+BAO7B,IAAD,EACyBb,KAAKJ,MAA5BlB,EADF,EACEA,OAAO4B,EADT,EACSA,YACTQ,EAAiBpC,EAAOqC,QAAO,SAAAC,GAClC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAExD,OAAQvC,EAAOyC,OAEZ,sBAAK7C,UAAU,KAAf,UACG,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,UACG,cAAC,EAAD,CAAU1B,OAAQoC,WAPN,6C,GAxBZZ,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SACjDX,M","file":"static/js/main.f9907cd2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email,id}) => {\n   return(\n      <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n         <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n         <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n         </div>\n      </div>\n   );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n      return ( \n         <div>\n            {\n               robots.map((user,i) => {\n                  return (\n                     <Card \n                        key={i} \n                        id={robots[i].id} \n                        name={robots[i].name} \n                        email={robots[i].email}\n                        />\n                  );\n               })\n            }\n      </div>\n   )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchField, searchChange}) => {\n   return (\n      <div className='pa2'>\n         <input \n         className='pa3 ba b--green bg-lightest-blue'\n         type=\"search\" \n         placeholder=\"search robots\" \n         onChange={searchChange}\n         />\n      </div>\n   )\n}\n\nexport default SearchBox; ","import React from 'react';\n\nconst Scroll = (props) => {\n   return (\n      <div style={{overflowY : 'scroll', border: '1px solid black', height: '800px'}}>\n         {props.children}\n      </div>\n   )\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n   constructor(props){\n      super(props);\n      this.state = {\n         hasError: false\n      }\n   }\n\n   componentDidCatch(error, info){\n      this.setState({ hasError: true })\n   }\n   \n\n   render() {\n      if (this.state.hasError){\n         return <h1>Oooooops. That is no good</h1>\n      }\n      return this.props.children\n   }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\n// import { robots } from './robots';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n   constructor() {\n      super()\n      this.state = {\n         robots: [],\n         searchfield: ''\n      }\n   }  \n\ncomponentDidMount(){\n   fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response => response.json())\n   .then(users => this.setState({ robots: users}));\n}\n\nonSearchChange = (event) => {\n   this.setState({ searchfield: event.target.value })\n}\n\n   render() {\n      const { robots,searchfield } = this.state;\n      const filteredRobots = robots.filter(robot =>{\n         return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n      })\n      return !robots.length ? <h1>Loading</h1> :\n      (\n         <div className='tc'>\n            <h1 className='f1'>Robofriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n               <ErrorBoundry>\n                  <CardList robots={filteredRobots}/>\n               </ErrorBoundry>\n              </Scroll>\n         </div>\n      );\n   }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}